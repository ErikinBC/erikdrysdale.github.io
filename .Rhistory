# Set up directory
dir1 <- 'C:/Users/erikinwest/Documents/bioeconometrician/github/erikdrysdale.github.io/_rmd/'
dir2 <- 'C:/Users/erikinwest/Documents/bioeconometrician/github/erikdrysdale.github.io/_rmd/extra_batch_effects/'
setwd(dir2)
# Increase the cowplot text size
theme_set(theme_cowplot(font_size=20))
############################################################
###### ----- STEP 0: CREATE MOTIVATING EXAMPLE ----- #######
############################################################
# Load data
library(GSE5859)
data(GSE5859)
# Get Expression data
geneExpression <- exprs(e)
# Find the Affymetrix control genes and drop
geneCtrl <- grepl('AFFX',rownames(e)) %>% which
geneExpression <- geneExpression[-geneCtrl,]
geneProbes <- rownames(geneExpression)
# Get the gene codes
geneCodes <- mapIds(hgfocus.db, keys=geneProbes,column="ENTREZID",keytype="PROBEID",multiVals="first")
geneSym <- mapIds(hgfocus.db, keys=geneProbes,column="SYMBOL",keytype="PROBEID",multiVals="first")
# And chromosome
geneCHR <- mapIds(Homo.sapiens, keys=geneCodes,column="TXCHROM", keytype="ENTREZID",multiVals="first") %>% str_c
# Create information table
geneAnnotation <- tibble(Probes=geneProbes,Sym=geneSym,CHR=geneCHR)
# Use genes on the Y-chromosome
y.probe <- geneAnnotation %>% filter(CHR=='chrY') %>% use_series(Probes)
y.sym <- geneAnnotation %>% filter(CHR=='chrY') %>% use_series(Sym)
yExpr <- geneExpression[which(geneProbes %in% y.probe),] %>% tbl_df %>%
set_colnames(factor(1:length(.))) %>% mutate(gene=y.sym) %>% gather(person,val,-gene)
# Find the gender order
sexOrder <- yExpr %>% group_by(person) %>% summarise(yExp=mean(val)) %>% arrange(yExp) %>% use_series(person)
sexSamp <- c(head(sexOrder),tail(sexOrder))
# Get a sub-sample of the data to show
ySub <- yExpr %>% filter(person %in% sexSamp)
# Create heatmap with normalized expression
gg.toyA <- ggplot(ySub %>% group_by(gene) %>% mutate(val=(val-mean(val))/sd(val)),
aes(x=fct_relevel(person,sexSamp),y=gene,fill=val)) +
geom_tile() + scale_fill_gradient(low='blue',high='yellow',name='Gene Expression') +
labs(x='Column=Person',y='Gene',subtitle='Normalized values') +
theme(legend.position = 'bottom',axis.text.x=element_blank(),axis.ticks.x=element_blank())
# And a histogram
yHist <- yExpr %>% group_by(person) %>% summarise(val=mean(val)) %>%
mutate(val=(val-mean(val))/sd(val),gender=ifelse(val>0,'M','W'))
yLab <- data.frame(x=c(-0.5,0.35),y=c(2,2),label=c('Women','Men'))
# Ploy
# Ploy
gg.toyB <- ggplot(yHist,aes(x=val,y=..density..)) +
geom_histogram(bins=36,color='black',aes(fill=gender),show.legend = F) +
labs(x='Mean Y-chr gene expression',y='Density',subtitle='For 208 participants') +
geom_vline(xintercept = 0,linetype=2) +
geom_text(data=yLab,aes(x=x,y=y,label=label,color=label),inherit.aes = F,show.legend = F,size=10)
gg.toy <- plot_grid(gg.toyA,gg.toyB,ncol=2,labels=c('A','B'))
gg.toy
# Ploy
gg.toyB <- ggplot(yHist,aes(x=val,y=..density..)) +
geom_histogram(bins=36,color='black',aes(fill=gender),show.legend = F) +
labs(x='Mean Y-chr gene expression',y='Density',subtitle='For 208 participants') +
geom_vline(xintercept = 0,linetype=2) +
geom_text(data=yLab,aes(x=x,y=y,label=label,color=label),inherit.aes = F,show.legend = F,size=8)
gg.toy <- plot_grid(gg.toyA,gg.toyB,ncol=2,labels=c('A','B'))
load('rmd_data_batch.RData')
rmd.list[['gg.toy']] <- gg.toy
save(rmd.list,file='rmd_data_batch.RData')
source('~/bioeconometrician/github/erikdrysdale.github.io/rmd2md.R', echo=TRUE)
source('~/bioeconometrician/github/erikdrysdale.github.io/rmd2md.R', echo=TRUE)
rmd2md()
setwd("C:/Users/erikinwest/Documents/bioeconometrician/github/erikdrysdale.github.io/")
path_site = getwd();dir_rmd = "_rmd";dir_md = "_posts"
url_images = "figures/";out_ext='.md';in_ext='.rmd';recursive=FALSE
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
#andy change to avoid path problems when running without sh on windows
files <- list.files(path=file.path(path_site,dir_rmd), pattern=in_ext, ignore.case=TRUE, recursive=recursive)
files
f=files[3]
f
message(paste("Processing ", f, sep=''),encoding = "UTF-8")
content <- readLines(file.path(path_site,dir_rmd,f))
# If any html calls, replace the src=figures/... with src=/figures/...
src.idx <- grep('src=',content,value=F)
src.idx
if (length(src.idx)>0) {
content[src.idx] <- gsub('src=\"figures','src=\"/figures',content[src.idx])
} else {}
frontMatter <- which(substr(content, 1, 3) == '---')
length(frontMatter) >= 2 & 1 %in% frontMatter
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
statusLine > frontMatter[1] & statusLine < frontMatter[2]
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
tolower(status) == 'process'
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
#andy change to path
outFile <- file.path(path_site, dir_md, paste0(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext))
outFile
content
content[1:10]
content[10:20]
content[20:30]
dev.off()
#andy change to render for jekyll
render_jekyll(highlight = "pygments")
#render_jekyll(highlight = "prettify") #for javascript
opts_knit$set(out.format='markdown')
# andy BEWARE don't set base.dir!! it caused me problems
# "base.dir is never used when composing the URL of the figures; it is
# only used to save the figures to a different directory.
# The URL of an image is always base.url + fig.path"
# https://groups.google.com/forum/#!topic/knitr/18aXpOmsumQ
# Get data directory
opts_knit$set(root.dir = dir_rmd)
opts_knit$set(base.url = "/")
# opts_knit$set(fig.width = 10)
opts_chunk$set(fig.path = url_images)
# opts_chunk$set(fig.width = 10)
#andy I could try to make figures bigger
#but that might make not work so well on mobile
opts_chunk$set(fig.width  = 8.5,
fig.height = 7.5,
dpi=300)
try(knit(text=content, output=outFile,encoding = "UTF-8"), silent=FALSE)
# Clear up
rm(list=ls())
# Set up directory
dir1 <- 'C:/Users/erikinwest/Documents/bioeconometrician/github/erikdrysdale.github.io/_rmd/'
dir2 <- 'C:/Users/erikinwest/Documents/bioeconometrician/github/erikdrysdale.github.io/_rmd/extra_batch_effects/'
setwd(dir2)
# Increase the cowplot text size
theme_set(theme_cowplot(font_size=20))
############################################################
###### ----- STEP 0: CREATE MOTIVATING EXAMPLE ----- #######
############################################################
# Load data
library(GSE5859)
data(GSE5859)
# Get Expression data
geneExpression <- exprs(e)
# Find the Affymetrix control genes and drop
geneCtrl <- grepl('AFFX',rownames(e)) %>% which
geneExpression <- geneExpression[-geneCtrl,]
geneProbes <- rownames(geneExpression)
# Get the gene codes
geneCodes <- mapIds(hgfocus.db, keys=geneProbes,column="ENTREZID",keytype="PROBEID",multiVals="first")
geneSym <- mapIds(hgfocus.db, keys=geneProbes,column="SYMBOL",keytype="PROBEID",multiVals="first")
# And chromosome
geneCHR <- mapIds(Homo.sapiens, keys=geneCodes,column="TXCHROM", keytype="ENTREZID",multiVals="first") %>% str_c
# Create information table
geneAnnotation <- tibble(Probes=geneProbes,Sym=geneSym,CHR=geneCHR)
# Use genes on the Y-chromosome
y.probe <- geneAnnotation %>% filter(CHR=='chrY') %>% use_series(Probes)
y.sym <- geneAnnotation %>% filter(CHR=='chrY') %>% use_series(Sym)
yExpr <- geneExpression[which(geneProbes %in% y.probe),] %>% tbl_df %>%
set_colnames(factor(1:length(.))) %>% mutate(gene=y.sym) %>% gather(person,val,-gene)
# Find the gender order
sexOrder <- yExpr %>% group_by(person) %>% summarise(yExp=mean(val)) %>% arrange(yExp) %>% use_series(person)
sexSamp <- c(head(sexOrder),tail(sexOrder))
# Get a sub-sample of the data to show
ySub <- yExpr %>% filter(person %in% sexSamp)
# Create heatmap with normalized expression
gg.toyA <- ggplot(ySub %>% group_by(gene) %>% mutate(val=(val-mean(val))/sd(val)),
aes(x=fct_relevel(person,sexSamp),y=gene,fill=val)) +
geom_tile() + scale_fill_gradient(low='blue',high='yellow',name='Gene Expression') +
labs(x='Column=Person',y='Gene',subtitle='Normalized values') +
theme(legend.position = 'bottom',axis.text.x=element_blank(),axis.ticks.x=element_blank())
# And a histogram
yHist <- yExpr %>% group_by(person) %>% summarise(val=mean(val)) %>%
mutate(val=(val-mean(val))/sd(val),gender=ifelse(val>0,'M','W'))
yLab <- data.frame(x=c(-0.5,0.35),y=c(2,2),label=c('Women','Men'))
# Ploy
gg.toyB <- ggplot(yHist,aes(x=val,y=..density..)) +
geom_histogram(bins=36,color='black',aes(fill=gender),show.legend = F) +
labs(x='Mean Y-chr gene expression',y='Density',subtitle='For 208 participants') +
geom_vline(xintercept = 0,linetype=2) +
geom_text(data=yLab,aes(x=x,y=y,label=label,color=label),inherit.aes = F,show.legend = F,size=6)
gg.toy <- plot_grid(gg.toyA,gg.toyB,ncol=2,labels=c('A','B'))
getwd()
load('rmd_data_batch.RData')
rmd.list[['gg.toy']] <- gg.toy
rmd.list$gg.toy
save(rmd.list,file='rmd_data_batch.RData')
source('~/bioeconometrician/github/erikdrysdale.github.io/rmd2md.R', echo=TRUE)
getwd()
rmd2md()
getwd()
dev.off()
setwd("C:/Users/erikinwest/Documents/bioeconometrician/github/erikdrysdale.github.io/")
path_site = getwd();dir_rmd = "_rmd";dir_md = "_posts"
url_images = "figures/";out_ext='.md';in_ext='.rmd';recursive=FALSE
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
#andy change to avoid path problems when running without sh on windows
files <- list.files(path=file.path(path_site,dir_rmd), pattern=in_ext, ignore.case=TRUE, recursive=recursive)
for(f in files) {
message(paste("Processing ", f, sep=''),encoding = "UTF-8")
content <- readLines(file.path(path_site,dir_rmd,f))
# If any html calls, replace the src=figures/... with src=/figures/...
src.idx <- grep('src=',content,value=F)
if (length(src.idx)>0) {
content[src.idx] <- gsub('src=\"figures','src=\"/figures',content[src.idx])
} else {}
frontMatter <- which(substr(content, 1, 3) == '---')
if(length(frontMatter) >= 2 & 1 %in% frontMatter) {
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
if(statusLine > frontMatter[1] & statusLine < frontMatter[2]) {
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
if(tolower(status) == 'process') {
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
#andy change to path
outFile <- file.path(path_site, dir_md, paste0(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext))
#render_markdown(strict=TRUE)
#render_markdown(strict=FALSE) #code didn't render properly on blog
#andy change to render for jekyll
render_jekyll(highlight = "pygments")
#render_jekyll(highlight = "prettify") #for javascript
opts_knit$set(out.format='markdown')
# andy BEWARE don't set base.dir!! it caused me problems
# "base.dir is never used when composing the URL of the figures; it is
# only used to save the figures to a different directory.
# The URL of an image is always base.url + fig.path"
# https://groups.google.com/forum/#!topic/knitr/18aXpOmsumQ
# Get data directory
opts_knit$set(root.dir = dir_rmd)
opts_knit$set(base.url = "/")
# opts_knit$set(fig.width = 10)
opts_chunk$set(fig.path = url_images)
# opts_chunk$set(fig.width = 10)
#andy I could try to make figures bigger
#but that might make not work so well on mobile
opts_chunk$set(fig.width  = 8.5,
fig.height = 7.5,
dpi=300)
try(knit(text=content, output=outFile,encoding = "UTF-8"), silent=FALSE)
} else {
warning(paste("Not processing ", f, ", status is '", status,
"'. Set status to 'process' to convert.", sep=''))
}
} else {
warning("Status not found in front matter.")
}
} else {
warning("No front matter found. Will not process this file.")
}
}
invisible()
rm(list=ls())
rmd2md <- function( path_site = getwd(),
dir_rmd = "_rmd",
dir_md = "_posts",
#dir_images = "figures",
url_images = "figures/",
out_ext='.md',
in_ext='.rmd',
recursive=FALSE) {
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
#andy change to avoid path problems when running without sh on windows
files <- list.files(path=file.path(path_site,dir_rmd), pattern=in_ext, ignore.case=TRUE, recursive=recursive)
for(f in files) {
message(paste("Processing ", f, sep=''),encoding = "UTF-8")
content <- readLines(file.path(path_site,dir_rmd,f))
# If any html calls, replace the src=figures/... with src=/figures/...
src.idx <- grep('src=',content,value=F)
if (length(src.idx)>0) {
content[src.idx] <- gsub('src=\"figures','src=\"/figures',content[src.idx])
} else {}
frontMatter <- which(substr(content, 1, 3) == '---')
if(length(frontMatter) >= 2 & 1 %in% frontMatter) {
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
if(statusLine > frontMatter[1] & statusLine < frontMatter[2]) {
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
if(tolower(status) == 'process') {
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
#andy change to path
outFile <- file.path(path_site, dir_md, paste0(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext))
#render_markdown(strict=TRUE)
#render_markdown(strict=FALSE) #code didn't render properly on blog
#andy change to render for jekyll
render_jekyll(highlight = "pygments")
#render_jekyll(highlight = "prettify") #for javascript
opts_knit$set(out.format='markdown')
# andy BEWARE don't set base.dir!! it caused me problems
# "base.dir is never used when composing the URL of the figures; it is
# only used to save the figures to a different directory.
# The URL of an image is always base.url + fig.path"
# https://groups.google.com/forum/#!topic/knitr/18aXpOmsumQ
# Get data directory
opts_knit$set(root.dir = dir_rmd)
opts_knit$set(base.url = "/")
# opts_knit$set(fig.width = 10)
opts_chunk$set(fig.path = url_images)
# opts_chunk$set(fig.width = 10)
#andy I could try to make figures bigger
#but that might make not work so well on mobile
opts_chunk$set(fig.width  = 8.5,
fig.height = 7.5,
dpi=300)
try(knit(text=content, output=outFile,encoding = "UTF-8"), silent=FALSE)
} else {
warning(paste("Not processing ", f, ", status is '", status,
"'. Set status to 'process' to convert.", sep=''))
}
} else {
warning("Status not found in front matter.")
}
} else {
warning("No front matter found. Will not process this file.")
}
}
invisible()
}
setwd("C:/Users/erikinwest/Documents/bioeconometrician/github/erikdrysdale.github.io/")
rmd2md()
source('~/bioeconometrician/github/erikdrysdale.github.io/_rmd/extra_batch_effects/batch_effects_script_for_blog.R', echo=TRUE)
rm(list=ls())
rmd2md <- function( path_site = getwd(),
dir_rmd = "_rmd",
dir_md = "_posts",
#dir_images = "figures",
url_images = "figures/",
out_ext='.md',
in_ext='.rmd',
recursive=FALSE) {
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
#andy change to avoid path problems when running without sh on windows
files <- list.files(path=file.path(path_site,dir_rmd), pattern=in_ext, ignore.case=TRUE, recursive=recursive)
for(f in files) {
message(paste("Processing ", f, sep=''),encoding = "UTF-8")
content <- readLines(file.path(path_site,dir_rmd,f))
# If any html calls, replace the src=figures/... with src=/figures/...
src.idx <- grep('src=',content,value=F)
if (length(src.idx)>0) {
content[src.idx] <- gsub('src=\"figures','src=\"/figures',content[src.idx])
} else {}
frontMatter <- which(substr(content, 1, 3) == '---')
if(length(frontMatter) >= 2 & 1 %in% frontMatter) {
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
if(statusLine > frontMatter[1] & statusLine < frontMatter[2]) {
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
if(tolower(status) == 'process') {
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
#andy change to path
outFile <- file.path(path_site, dir_md, paste0(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext))
#render_markdown(strict=TRUE)
#render_markdown(strict=FALSE) #code didn't render properly on blog
#andy change to render for jekyll
render_jekyll(highlight = "pygments")
#render_jekyll(highlight = "prettify") #for javascript
opts_knit$set(out.format='markdown')
# andy BEWARE don't set base.dir!! it caused me problems
# "base.dir is never used when composing the URL of the figures; it is
# only used to save the figures to a different directory.
# The URL of an image is always base.url + fig.path"
# https://groups.google.com/forum/#!topic/knitr/18aXpOmsumQ
# Get data directory
opts_knit$set(root.dir = dir_rmd)
opts_knit$set(base.url = "/")
# opts_knit$set(fig.width = 10)
opts_chunk$set(fig.path = url_images)
# opts_chunk$set(fig.width = 10)
#andy I could try to make figures bigger
#but that might make not work so well on mobile
opts_chunk$set(fig.width  = 8.5,
fig.height = 7.5,
dpi=300)
try(knit(text=content, output=outFile,encoding = "UTF-8"), silent=FALSE)
} else {
warning(paste("Not processing ", f, ", status is '", status,
"'. Set status to 'process' to convert.", sep=''))
}
} else {
warning("Status not found in front matter.")
}
} else {
warning("No front matter found. Will not process this file.")
}
}
invisible()
}
setwd("C:/Users/erikinwest/Documents/bioeconometrician/github/erikdrysdale.github.io/")
rmd2md()
rmd2md()
source('~/bioeconometrician/github/erikdrysdale.github.io/_rmd/extra_batch_effects/batch_effects_script_for_blog.R', echo=TRUE)
rm(list=ls())
rmd2md <- function( path_site = getwd(),
dir_rmd = "_rmd",
dir_md = "_posts",
#dir_images = "figures",
url_images = "figures/",
out_ext='.md',
in_ext='.rmd',
recursive=FALSE) {
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
#andy change to avoid path problems when running without sh on windows
files <- list.files(path=file.path(path_site,dir_rmd), pattern=in_ext, ignore.case=TRUE, recursive=recursive)
for(f in files) {
message(paste("Processing ", f, sep=''),encoding = "UTF-8")
content <- readLines(file.path(path_site,dir_rmd,f))
# If any html calls, replace the src=figures/... with src=/figures/...
src.idx <- grep('src=',content,value=F)
if (length(src.idx)>0) {
content[src.idx] <- gsub('src=\"figures','src=\"/figures',content[src.idx])
} else {}
frontMatter <- which(substr(content, 1, 3) == '---')
if(length(frontMatter) >= 2 & 1 %in% frontMatter) {
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
if(statusLine > frontMatter[1] & statusLine < frontMatter[2]) {
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
if(tolower(status) == 'process') {
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
#andy change to path
outFile <- file.path(path_site, dir_md, paste0(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext))
#render_markdown(strict=TRUE)
#render_markdown(strict=FALSE) #code didn't render properly on blog
#andy change to render for jekyll
render_jekyll(highlight = "pygments")
#render_jekyll(highlight = "prettify") #for javascript
opts_knit$set(out.format='markdown')
# andy BEWARE don't set base.dir!! it caused me problems
# "base.dir is never used when composing the URL of the figures; it is
# only used to save the figures to a different directory.
# The URL of an image is always base.url + fig.path"
# https://groups.google.com/forum/#!topic/knitr/18aXpOmsumQ
# Get data directory
opts_knit$set(root.dir = dir_rmd)
opts_knit$set(base.url = "/")
# opts_knit$set(fig.width = 10)
opts_chunk$set(fig.path = url_images)
# opts_chunk$set(fig.width = 10)
#andy I could try to make figures bigger
#but that might make not work so well on mobile
opts_chunk$set(fig.width  = 8.5,
fig.height = 7.5,
dpi=300)
try(knit(text=content, output=outFile,encoding = "UTF-8"), silent=FALSE)
} else {
warning(paste("Not processing ", f, ", status is '", status,
"'. Set status to 'process' to convert.", sep=''))
}
} else {
warning("Status not found in front matter.")
}
} else {
warning("No front matter found. Will not process this file.")
}
}
invisible()
}
setwd("C:/Users/erikinwest/Documents/bioeconometrician/github/erikdrysdale.github.io/")
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
theme_set(theme_cowplot(font_size=14))
rmd2md()
theme_set(theme_cowplot(font_size=14))
rmd2md()
rmd2md()
rmd2md()
theme_get('font_size')
theme_get()
theme_get()$font.size
theme_get('fontsize')
theme_get() %>% names
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
rmd2md()
