labs(y='99%-quantile density',
x=expression('||' * X^T * e * '||' * phantom()[infinity] * '/||' * e * '||' * phantom()[2]  )) +
scale_fill_discrete(name='') +
theme(legend.position=c(0.6,0.8))
?gather
gg.sns <-
ggplot(sn.df,aes(x=value,fill=key)) +
geom_density(color='black',alpha=0.5) +
labs(y='99%-quantile density',
x=expression('||' * X^T * e * '||' * phantom()[infinity] * '/||' * e * '||' * phantom()[2]  )) +
scale_fill_discrete(name='') +
theme(legend.position=c(0.6,0.8))
save_plot(filename="C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/figures/gg_sns.png",
plot = gg.sns,base_height = 4,base_width = 4)
save_plot(filename="C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/figures/gg_sns.png",
plot = gg.sns,base_height = 2,base_width = 2)
save_plot(filename="C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/figures/gg_sns.png",
plot = gg.sns,base_height = 4,base_width = 4)
gg.sns <-
ggplot(sn.df,aes(x=value,fill=key)) +
geom_density(color='black',alpha=0.5) +
labs(y='99%-quantile density',
x=expression('||' * X^T * e * '||' * phantom()[infinity] * '/||' * e * '||' * phantom()[2]  )) +
scale_fill_discrete(name='') +
theme(legend.position=c(0.5,0.8))
save_plot(filename="C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/figures/gg_sns.png",
plot = gg.sns,base_height = 4,base_width = 4)
list.files()
load('store_bind.RData')
store.bind %>% tbl_df
store.bind %>% tbl_df %>% dplyr::select(dataset:sel.lam999)
store.bind %>% tbl_df %>% dplyr::select(dataset:sel.lam999) %>%
gather(key,val,-(datset:p))
store.bind %>% tbl_df %>% dplyr::select(dataset:sel.lam999) %>%
gather(key,val,-(dataset:p))
store.bind %>% tbl_df %>% dplyr::select(dataset:sel.lam999) %>%
gather(key,val,-(dataset:p)) %>% separate(key,c('drop','type'))
library(datamicroarray)
describe_data()
store.bind$dataset %>% table
store.bind$dataset %>% unique %>% lenth
store.bind$dataset %>% unique %>% length
store.bind %>% tbl_df
store.bind %>% tbl_df %>% na.omit
store.bind %>% tbl_df %>% dplyr::select(dataset:sel.lam999) %>%
gather(key,val,-(dataset:p)) %>% separate(key,c('drop','type'))
describe_data()
q=describe_data()
q$Disease
q$Disease %>% table
q$Disease %>% table %>% data.frame
describe_data()[,-4]
describe_data() %>% head
qq=describe_data()[,-5]
qq$author
substr(qq$author,1)
substr(qq$author,1,1)
upper(substr(qq$author,1,1))
toupper(substr(qq$author,1,1))
?substr
substr(qq$author,2,-1)
nchar(qq$author)
df=describe_data()[,-5]
aut=as.character(df$author)
toupper(substr(aut,1,1))
substr(qq$author,2,nchar(aut))
paste(toupper(substr(aut,1,1)),substr(qq$author,2,nchar(aut)),sep='')
df$author <- paste(toupper(substr(aut,1,1)),substr(aut,2,nchar(aut)),sep='')
df
df=describe_data()[,-5]
aut=as.character(df$author)
df$author <- paste(toupper(substr(aut,1,1)),substr(aut,2,nchar(aut)),sep='')
df
order(df$p)
df[order(df$p),]
df[order(df$n),]
df$p %>% summary
df$p/df$n
summary(df$p/df$n)
glimpse(store.bind)
store.bind %>% tbl_df %>% dplyr::select(dataset:sel.lam999) %>%
gather(key,val,-(dataset:p)) %>% separate(key,c('drop','type'))
store.bind %>% tbl_df %>% dplyr::select(dataset:sel.lam999) %>%
gather(key,val,-(dataset:p)) %>% separate(key,c('drop','type')) %>%
dplyr::select(-drop)
tbl.sel <- store.bind %>% tbl_df %>% dplyr::select(dataset:sel.lam999) %>%
gather(key,val,-(dataset:p)) %>% separate(key,c('drop','type')) %>%
dplyr::select(-drop)
tbl.sel %>% group_by(dataset,N,p,type)
tbl.sel %>% group_by(dataset,N,p,type) %>%
summarise(val=mean(val))
tbl.sel %>% group_by(dataset,N,p,type) %>%
summarise(sel=mean(val))
tbl.sel %>% group_by(dataset,N,p,type) %>%
summarise(sel=mean(val)) %>%
mutate(ratio=sel/p)
sum.sel <- tbl.sel %>% group_by(dataset,N,p,type) %>%
summarise(sel=mean(val)) %>%
mutate(ratio=sel/p)
sum.sel
sum.sel <- tbl.sel %>% group_by(dataset,N,p,type) %>%
summarise(sel=mean(val)) %>%
mutate(ratio=sel/p) %>% gather(key,val,-(dataset:type))
sel,aes(x=dataset,y=))
sum.sel
ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_wrap(~key)
ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_wrap(~key,scales='free_y')
ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_grid(type~key,scales='free_y')
ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_grid(key~type,scales='free_y')
ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_wrap(key~type,scales='free_y')
sum.sel
ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_wrap(key~type,scales='free_y') +
scale_color_discrete(name='') +
geom_hline(data=data.frame(type=c('lam95','lam99','lam999'),val=c(0.05,0.01,0.001)),
aes(yintercept=val)) +
theme(axis.title.x = element_blank(),axis.text.x = element_text(angle=90))
data.frame(type=c('lam95','lam99','lam999'),val=c(0.05,0.01,0.001))
data.frame(type=c('lam95','lam99','lam999'),val=c(0.05,0.01,0.001))
ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_wrap(key~type,scales='free_y') +
scale_color_discrete(name='') +
geom_hline(data=data.frame(type=c('lam95','lam99','lam999'),val=c(0.05,0.01,0.001)),
aes(yintercept=val))
ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_wrap(key~type,scales='free_y') +
scale_color_discrete(name='') +
theme(axis.title.x = element_blank(),axis.text.x = element_text(angle=90))
ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_wrap(key~type,scales='free_y') +
scale_color_discrete(name='')
ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_wrap(key~type,scales='free_y') +
theme(axis.title.x = element_blank(),axis.text.x = element_text(angle=90),
legend.position = 'none')
dev.off()
store.bind %>% tbl_df
store.bind %>% tbl_df %>% dplyr::select(-(sel.lam95:sel.lam999))
store.bind %>% tbl_df %>% dplyr::select(-(sel.lam95:sel.lam999)) %>%
gather(key,val,-(dataset:p))
store.bind %>% tbl_df %>% dplyr::select(-(sel.lam95:sel.lam999)) %>%
gather(key,val,-(dataset:p)) %>% separate(key,c('drop','type')) %>%
pull(key) %>% table
store.bind %>% tbl_df %>% dplyr::select(-(sel.lam95:sel.lam999)) %>%
gather(key,val,-(dataset:p)) %>%
pull(key) %>% table
store.bind %>% tbl_df %>% dplyr::select(-(sel.lam95:sel.lam999)) %>%
gather(key,val,-(dataset:p))
tbl.mse <- store.bind %>% tbl_df %>% dplyr::select(-(sel.lam95:sel.lam999)) %>%
gather(key,val,-(dataset:p))
tbl.mse %>% group_by(dataset,N,p,key) %>%
summarise(mse=mean(val),p25=quantile(val,0.25),p75=quantile(val,0.75))
tbl.mse %>% group_by(dataset,N,p,key)
tbl.mse %>% group_by(dataset,N,p,key) %>%
summarise(mse=mean(val))
tbl.mse %>% group_by(dataset,N,p,key) %>%
summarise(mse=mean(val),p25=quantile(val,0.25))
tbl.mse %>% group_by(dataset,N,p,key) %>%
summarise(mse=mean(val),p25=quantile(val,0.25,na.rm=T))
tbl.mse %>% group_by(dataset,N,p,key) %>%
summarise(mse=mean(val,na.rm=T),lb=quantile(val,0.25,na.rm=T),ub=quantile(val,0.75,na.rm=T))
sum.mse <- tbl.mse %>% group_by(dataset,N,p,key) %>%
summarise(mse=mean(val,na.rm=T),lb=quantile(val,0.25,na.rm=T),ub=quantile(val,0.75,na.rm=T))
sum.mse
pd=position_dodge(0.5)
ggplot(sum.mse,aes(x=dataset,y=mse,color=key)) +
geom_point(size=2,position = pd)
sum.mse
sum.mse <- tbl.mse %>% group_by(dataset,N,p,key) %>%
summarise(mse=mean(val,na.rm=T),lb=quantile(val,0.25,na.rm=T),ub=quantile(val,0.75,na.rm=T)) %>%
ungroup
sum.mse <- tbl.mse %>% group_by(dataset,N,p,key) %>%
summarise(mse=median(val,na.rm=T),lb=quantile(val,0.25,na.rm=T),ub=quantile(val,0.75,na.rm=T)) %>%
ungroup
pd=position_dodge(0.5)
ggplot(sum.mse,aes(x=dataset,y=mse,color=key)) +
geom_point(size=2,position = pd)
sum.mse
sum.mse %>% group_by(key) %>%
summarise(mse=mean(mse),lb=mean(lb),up=mean(ub))
sumsum.mse <- sum.mse %>% group_by(key) %>%
summarise(mse=mean(mse),lb=mean(lb),up=mean(ub))
sumsum.mse
ggplot(sumsum.mse,aes(x=key,y=mse,color=key)) +
geom_point(size=2)
tbl.mse
ggplot(tbl.mse,aes(x=key,y=mse,color=dataset)) +
geom_point(size=2)
ggplot(tbl.mse,aes(x=key,y=val,color=dataset)) +
geom_jitter(size=2)
summary(tbl.mse$val)
mean(tbl.mse$val>3)
mean(tbl.mse$val>3,na.rm=T)
ggplot(filter(tbl.mse,val<3),aes(x=key,y=val,color=dataset)) +
geom_jitter(size=2)
tbl.mse
filter(tbl.mse,key %in% c('gauss.1se','gauss.min','ridge.lam99','ridge.lam999'))
ggplot(filter(tbl.mse,key %in% c('gauss.1se','gauss.min','ridge.lam99','ridge.lam999')),
aes(x=key,y=val)) +
geom_boxplot()
ggplot(filter(tbl.mse,key %in% c('gauss.1se','gauss.min','ridge.lam99','ridge.lam999') & val<5),
aes(x=key,y=val)) +
geom_boxplot()
ggplot(filter(tbl.mse,key %in% c('gauss.1se','gauss.min','ridge.lam99','ridge.lam999') & val<2),
aes(x=key,y=val)) +
geom_boxplot()
tbl.mse
sum.mse <- tbl.mse %>% group_by(dataset,N,p,key) %>%
summarise(mse=median(val,na.rm=T)) %>% ungroup
sum.mse
ggplot(sum.mse,aes(x=key,y=mse,color=key)) +
geom_boxplot()
ggplot(sum.mse,aes(x=key,y=mse,color=key)) +
geom_boxplot() +
theme(axis.title.x = element_blank(),legend.position = 'none',
axis.text.x=element_text(angle=90))
tbl.mse
tbl.mse %>% group_by(p,key) %>% summarise(val=median(val))
tbl.mse %>% group_by(p,key) %>% summarise(val=median(val,na.rm=T))
psum.mse <- tbl.mse %>% group_by(p,key) %>% summarise(val=median(val,na.rm=T))
ggplot(psum.mse,aes(x=p,y=val,color=key)) +
geom_line() +
geom_point()
dev.off()
ggplot(sum.mse,aes(x=key,y=mse,color=key)) +
geom_boxplot() +
theme(axis.title.x = element_blank(),legend.position = 'none',
axis.text.x=element_text(angle=90))
sum.mse
sum.mse
sum.mse$key %>% levels
sum.mse$key %>% unique
lvls <- c('gauss.1se','gauss.min','ridge.lam95','ridge.lam99','ridge.lam999',
'sqrt.lam95','sqrt.lam99','sqrt.lam999','ols.lam95','ols.lam99','ols.lam999')
lvls <- c('gauss.min','gauss.1se','ridge.lam95','ridge.lam99','ridge.lam999',
'sqrt.lam95','sqrt.lam99','sqrt.lam999','ols.lam95','ols.lam99','ols.lam999')
lbls <- c('CV-min','CV-1se','Ridge-95','Ridge-99','Ridge-999',
'SQRT-95','SQRT-99','SQRT-99','OLS-95','OLS-99','OLS-999')
sum.mse$key
sum.mse$key <- factor(sum.mse$key,levels=lvls,labels=lbls)
lvls
sum.mse$key
factor(sum.mse$key,levels=lvls,labels=lbls)
sum.mse$key
length(lvls)
length(unique(lvls))
factor(sum.mse$key) %>% levels
levels(factor(sum.mse$key))
factor(levels(factor(sum.mse$key)),levels=lvls)
factor(levels(factor(sum.mse$key)),levels=lvls,labels=lbls)
sum.mse$key <- factor(sum.mse$key,levels=lvls[1:7],labels=lbls[1:7])
table(sum.mse$key)
sum.mse <- tbl.mse %>% group_by(dataset,N,p,key) %>%
summarise(mse=median(val,na.rm=T)) %>% ungroup
# Levls and labels
lvls <- c('gauss.min','gauss.1se','ridge.lam95','ridge.lam99','ridge.lam999',
'sqrt.lam95','sqrt.lam99','sqrt.lam999','ols.lam95','ols.lam99','ols.lam999')
lbls <- c('CV-min','CV-1se','Ridge-95','Ridge-99','Ridge-999',
'SQRT-95','SQRT-99','SQRT-99','OLS-95','OLS-99','OLS-999')
sum.mse$key <- factor(sum.mse$key,levels=lvls[1:8],labels=lbls[1:8])
table(sum.mse$key)
lvls[1:8]
sum.mse <- tbl.mse %>% group_by(dataset,N,p,key) %>%
summarise(mse=median(val,na.rm=T)) %>% ungroup
levels(sum.mse$key)
unique(sum.mse$key)
sum.mse <- tbl.mse %>% group_by(dataset,N,p,key) %>%
summarise(mse=median(val,na.rm=T)) %>% ungroup
# Levls and labels
lvls <- c('gauss.min','gauss.1se','ridge.lam95','ridge.lam99','ridge.lam999',
'sqrt.lam95','sqrt.lam99','sqrt.lam999','ols.lam95','ols.lam99','ols.lam999')
lbls <- c('CV-min','CV-1se','Ridge-95','Ridge-99','Ridge-999',
'SQRT-95','SQRT-99','SQRT-99','OLS-95','OLS-99','OLS-999')
factor(sum.mse$key)
lbls <- c('CV-min','CV-1se','Ridge-95','Ridge-99','Ridge-999',
'SQRT-95','SQRT-99','SQRT-999','OLS-95','OLS-99','OLS-999')
sum.mse$key <- factor(sum.mse$key,levels=lvls[1:8],labels=lbls[1:8])
table(sum.mse$key)
ggplot(sum.mse,aes(x=key,y=mse,color=key)) +
geom_boxplot() +
theme(axis.title.x = element_blank(),legend.position = 'none',
axis.text.x=element_text(angle=90)) +
labs(y='(median) MSE')
# Get average
sum.mse <- tbl.mse %>% group_by(dataset,N,p,key) %>%
summarise(mse=median(val,na.rm=T)) %>% ungroup
# Levls and labels
lvls <- c('gauss.min','gauss.1se','ridge.lam95','ridge.lam99','ridge.lam999',
'sqrt.lam95','sqrt.lam99','sqrt.lam999','ols.lam95','ols.lam99','ols.lam999')
lbls <- c('CV-min','CV-1se','Ridge-95','Ridge-99','Ridge-999',
'SQRT-95','SQRT-99','SQRT-999','OLS-95','OLS-99','OLS-999')
# Recode
sum.mse$key <- factor(sum.mse$key,levels=lvls,labels=lbls)
#
ggplot(sum.mse,aes(x=key,y=mse,color=key)) +
ggplot(sum.mse,aes(x=key,y=mse,color=key)) +
geom_boxplot() +
theme(axis.title.x = element_blank(),legend.position = 'none',
axis.text.x=element_text(angle=90)) +
labs(y='(median) MSE')
ggplot(sum.mse,aes(x=key,y=mse,color=key)) +
geom_boxplot() +
theme(axis.title.x = element_blank(),legend.position = 'none',
axis.text.x=element_text(angle=90)) +
labs(y='(median) MSE')
gg.marray <- ggplot(sum.mse,aes(x=key,y=mse,color=key)) +
geom_boxplot() +
theme(axis.title.x = element_blank(),legend.position = 'none',
axis.text.x=element_text(angle=90)) +
labs(y='(median) MSE')
save_plot(filename="C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/figures/gg_marray.png",
plot = gg.marray,base_height = 4,base_width = 5)
ggplot(filter(tbl.mse,val<3),aes(x=key,y=val,color=dataset)) +
geom_jitter(size=2)
ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_wrap(key~type,scales='free_y') +
theme(axis.title.x = element_blank(),axis.text.x = element_text(angle=90),
legend.position = 'none')
sum.sel
substr(sum.sel$dataset,1,1)
toupper(substr(sum.sel$dataset,1,1))
str_c(toupper(substr(sum.sel$dataset,1,1)),substr(sum.sel$dataset,1,nchar(sum.sel$dataset)))
str_c(toupper(substr(sum.sel$dataset,1,1)),substr(sum.sel$dataset,2,nchar(sum.sel$dataset)))
sum.sel$dataset <- str_c(toupper(substr(sum.sel$dataset,1,1)),substr(sum.sel$dataset,2,nchar(sum.sel$dataset)))
sum.sel
sum.sel$key
sum.sel$key <- fct_recode(sum.sel$key,'# selected/p'='ratio','# selected')
sum.sel
sum.sel$key <- fct_recode(sum.sel$key,'# selected/p'='ratio','# selected'='sel')
sum.sel
sum.sel <- tbl.sel %>% group_by(dataset,N,p,type) %>%
summarise(sel=mean(val)) %>%
mutate(ratio=sel/p) %>% gather(key,val,-(dataset:type))
sum.sel$dataset <- str_c(toupper(substr(sum.sel$dataset,1,1)),substr(sum.sel$dataset,2,nchar(sum.sel$dataset)))
sum.sel$key <- fct_recode(sum.sel$key,'# selected/p'='ratio','# selected'='sel')
sum.sel
sum.sel$type
fct_recode(sum.sel$type,'alpha=0.05'='lam95','alpha=0.01'='lam99','alpha=0.001'='lam999')
ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_wrap(key~type,scales='free_y') +
theme(axis.title.x = element_blank(),axis.text.x = element_text(angle=90),
legend.position = 'none')
sum.sel$type <- fct_recode(sum.sel$type,'alpha=0.05'='lam95','alpha=0.01'='lam99','alpha=0.001'='lam999')
ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_wrap(key~type,scales='free_y') +
theme(axis.title.x = element_blank(),axis.text.x = element_text(angle=90),
legend.position = 'none')
ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_wrap(key~type,scales='free_y',labeller=label_parsed) +
theme(axis.title.x = element_blank(),axis.text.x = element_text(angle=90),
legend.position = 'none') +
labs(y='Value')
sum.sel <- tbl.sel %>% group_by(dataset,N,p,type) %>%
summarise(sel=mean(val)) %>%
mutate(ratio=sel/p) %>% gather(key,val,-(dataset:type))
sum.sel$dataset <- str_c(toupper(substr(sum.sel$dataset,1,1)),substr(sum.sel$dataset,2,nchar(sum.sel$dataset)))
sum.sel$key <- fct_recode(sum.sel$key,'# selected/p'='ratio','# selected'='sel')
sum.sel$type <- fct_recode(sum.sel$type,'alpha *" =0.05"'='lam95',
'alpha * "=0.01"'='lam99','alpha * "=0.001"'='lam999')
sum.sel
ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_wrap(key~type,scales='free_y',labeller=labeller(type=label_parsed)) +
theme(axis.title.x = element_blank(),axis.text.x = element_text(angle=90),
legend.position = 'none') +
labs(y='Value')
#  ---- Get the selection variables ---- #
tbl.sel <- store.bind %>% tbl_df %>% dplyr::select(dataset:sel.lam999) %>%
gather(key,val,-(dataset:p)) %>% separate(key,c('drop','type')) %>%
dplyr::select(-drop)
# Get average
sum.sel <- tbl.sel %>% group_by(dataset,N,p,type) %>%
summarise(sel=mean(val)) %>%
mutate(ratio=sel/p) %>% gather(key,val,-(dataset:type))
# Clean up
sum.sel$dataset <- str_c(toupper(substr(sum.sel$dataset,1,1)),substr(sum.sel$dataset,2,nchar(sum.sel$dataset)))
sum.sel$key <- fct_recode(sum.sel$key,'# selected/p'='ratio','# selected'='sel')
sum.sel$type <- fct_recode(sum.sel$type,'alpha *"=0.05"'='lam95',
'alpha * "=0.01"'='lam99','alpha * "=0.001"'='lam999')
# Make a plot
gg.sel <- ggplot(sum.sel,aes(x=dataset,y=val,color=type)) +
geom_point(size=2) +
facet_wrap(key~type,scales='free_y',labeller=labeller(type=label_parsed)) +
theme(axis.title.x = element_blank(),axis.text.x = element_text(angle=90),
legend.position = 'none') +
labs(y='Value')
plot_grid(gg.marray,gg.sel,ncol=1)
plot_grid(gg.marray,gg.sel,nrow=1)
gg.mboth <- plot_grid(gg.marray,gg.sel,nrow=1,rel_widths = c(2,3))
save_plot(filename="C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/figures/gg_marray.png",
plot = gg.marray,base_height = 8,base_width = 10)
save_plot(filename="C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/figures/gg_marray.png",
plot = gg.mboth,base_height = 8,base_width = 10)
save_plot(filename="C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/figures/gg_marray.png",
plot = gg.mboth,base_height = 8,base_width = 12)
save_plot(filename="C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/figures/gg_marray.png",
plot = gg.mboth,base_height = 8,base_width = 16)
save_plot(filename="C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/figures/gg_marray.png",
plot = gg.mboth,base_height = 8,base_width = 18)
gg.mboth <- plot_grid(gg.marray,gg.sel,labels=c('A','B'),
nrow=1,rel_widths = c(2,3))
save_plot(filename="C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/figures/gg_marray.png",
plot = gg.mboth,base_height = 8,base_width = 18)
dev.off()
rm(list=ls())
rmd2md <- function( path_site = getwd(),
dir_rmd = "_rmd",
dir_md = "_posts",
#dir_images = "figures",
url_images = "figures/",
out_ext='.md',
in_ext='.rmd',
recursive=FALSE) {
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
#andy change to avoid path problems when running without sh on windows
files <- list.files(path=file.path(path_site,dir_rmd), pattern=in_ext, ignore.case=TRUE, recursive=recursive)
for(f in files) {
message(paste("Processing ", f, sep=''),encoding = "UTF-8")
content <- readLines(file.path(path_site,dir_rmd,f))
# If any html calls, replace the src=figures/... with src=/figures/...
src.idx <- grep('src=',content,value=F)
if (length(src.idx)>0) {
content[src.idx] <- gsub('src=\"figures','src=\"/figures',content[src.idx])
} else {}
frontMatter <- which(substr(content, 1, 3) == '---')
if(length(frontMatter) >= 2 & 1 %in% frontMatter) {
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
if(statusLine > frontMatter[1] & statusLine < frontMatter[2]) {
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
if(tolower(status) == 'process') {
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
#andy change to path
outFile <- file.path(path_site, dir_md, paste0(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext))
#render_markdown(strict=TRUE)
#render_markdown(strict=FALSE) #code didn't render properly on blog
#andy change to render for jekyll
render_jekyll(highlight = "pygments")
#render_jekyll(highlight = "prettify") #for javascript
opts_knit$set(out.format='markdown')
# andy BEWARE don't set base.dir!! it caused me problems
# "base.dir is never used when composing the URL of the figures; it is
# only used to save the figures to a different directory.
# The URL of an image is always base.url + fig.path"
# https://groups.google.com/forum/#!topic/knitr/18aXpOmsumQ
# Get data directory
opts_knit$set(root.dir = dir_rmd)
opts_knit$set(base.url = "/")
# opts_knit$set(fig.width = 10)
opts_chunk$set(fig.path = url_images)
# opts_chunk$set(fig.width = 10)
#andy I could try to make figures bigger
#but that might make not work so well on mobile
opts_chunk$set(fig.width  = 8.5,
fig.height = 7.5,
dpi=300)
try(knit(text=content, output=outFile,encoding = "UTF-8"), silent=FALSE)
} else {
warning(paste("Not processing ", f, ", status is '", status,
"'. Set status to 'process' to convert.", sep=''))
}
} else {
warning("Status not found in front matter.")
}
} else {
warning("No front matter found. Will not process this file.")
}
}
invisible()
}
setwd("C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/")
list.files()
rmd2md()
setwd("C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/")
rmd2md()
rmd2md()
rmd2md()
setwd("C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/")
rmd2md()
setwd("C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/")
rmd2md()
setwd("C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/")
rmd2md()
setwd("C:/Users/erikinwest/Documents/blogs/github/erikdrysdale.github.io/")
rmd2md()
