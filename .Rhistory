geom_hline(yintercept = bonfer,color='indianred',linetype=2)
dev.off()
ggplot(tt.vital %>% na.omit,aes(x=statistic,y=p10,color=ifelse(p10>bonfer,'yes','no'))) +
geom_point() + theme(legend.position=c(0.8,0.8)) +
scale_color_manual(name='Bonferroni',labels=c('Below','Above'),values=c('grey','indianred')) +
labs(x='Mean difference (log2)',y='-log10(p-value)') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2)
dev.off()
ggplot(tt.vital %>% na.omit,aes(x=dm,y=p10,color=ifelse(p10>bonfer,'yes','no'))) +
stat_bin2d() + theme(legend.position=c(0.8,0.8)) +
scale_color_manual(name='Bonferroni',labels=c('Below','Above'),values=c('grey','indianred')) +
labs(x='Mean difference (log2)',y='-log10(p-value)') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2)
c(-1000,-100,-10,0,10,100,1000)
test=c(-1000,-100,-10,0,10,100,1000)
log10(log10(abs(test))*ifelse(test<0,-1,1))
abs(test)
log10(abs(test))
test=c(-1000,-100,-10,1,10,100,1000)
ifelse(test<0,-1,1)
log10(abs(test))*ifelse(test<0,-1,1)
dev.off()
ggplot(tt.vital %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10,color=ifelse(p10>bonfer,'yes','no'))) +
geom_point() + theme(legend.position=c(0.8,0.8)) +
scale_color_manual(name='Bonferroni',labels=c('Below','Above'),values=c('grey','indianred')) +
labs(x='Mean difference (log2)',y='-log10(p-value)') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2)
dev.off()
gv()
gc()
ggplot(tt.vital[1:1000,] %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10,color=ifelse(p10>bonfer,'yes','no'))) +
stat_bin2d() + theme(legend.position=c(0.8,0.8)) +
scale_color_manual(name='Bonferroni',labels=c('Below','Above'),values=c('grey','indianred')) +
labs(x='Mean difference (log2)',y='-log10(p-value)') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2)
dev.off()
ggplot(tt.vital[1:1000,] %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d() + theme(legend.position=c(0.8,0.8)) +
scale_color_manual(name='Bonferroni',labels=c('Below','Above'),values=c('grey','indianred')) +
labs(x='Mean difference (log2)',y='-log10(p-value)') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2)
dev.off()
ggplot(tt.vital[1:1000,] %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=100) + theme(legend.position=c(0.8,0.8)) +
scale_color_manual(name='Bonferroni',labels=c('Below','Above'),values=c('grey','indianred')) +
labs(x='Mean difference (log2)',y='-log10(p-value)') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2)
dev.off()
ggplot(tt.vital[1:1000,] %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=50) + theme(legend.position=c(0.8,0.8)) +
scale_color_manual(name='Bonferroni',labels=c('Below','Above'),values=c('grey','indianred')) +
labs(x='Mean difference (log2)',y='-log10(p-value)') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2)
dev.off()
ggplot(tt.vital[1:1000,] %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=50) + theme(legend.position=c(0.8,0.8)) +
scale_color_gradient(low='blue',high='yellow') +
labs(x='Mean difference (log2)',y='-log10(p-value)',) +
geom_hline(yintercept = bonfer,color='indianred',linetype=2)
ggplot(tt.vital[1:1000,] %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=50) + theme(legend.position=c(0.8,0.8)) +
scale_color_gradient(low='blue',high='yellow') +
labs(x='Mean difference (log2)',y='-log10(p-value)',subtitle='Gene-wise ttest: alive/dead') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2)
dev.off()
ggplot(tt.vital[1:1000,] %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=50) + theme(legend.position=c(0.8,0.8)) +
scale_fill_gradient(name='Bin count',low='blue',high='yellow') +
labs(x='Mean difference (log2)',y='-log10(p-value)',subtitle='Gene-wise ttest: alive/dead') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2) +
theme(legend.direction='horizontal')
dev.off()
ggplot(tt.vital[1:1000,] %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=50) + theme(legend.position=c(0.6,0.8)) +
scale_fill_gradient(name='Bin count',low='blue',high='yellow') +
labs(x='Mean difference (log2)',y='-log10(p-value)',subtitle='Gene-wise ttest: alive/dead') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2) +
theme(legend.direction='horizontal')
dev.off()
ggplot(tt.vital[1:1000,] %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=50) + theme(legend.position=c(0.7,0.8)5) +
scale_fill_gradient(name='Bin count',low='blue',high='yellow') +
labs(x='Mean difference (log2)',y='-log10(p-value)',subtitle='Gene-wise ttest: alive/dead') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2) +
theme(legend.direction='horizontal')
ggplot(tt.vital[1:1000,] %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=50) + theme(legend.position=c(0.7,0.85) +
scale_fill_gradient(name='Bin count',low='blue',high='yellow') +
labs(x='Mean difference (log2)',y='-log10(p-value)',subtitle='Gene-wise ttest: alive/dead') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2) +
theme(legend.direction='horizontal')
gg.volc1 <-
ggplot(tt.vital %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=50) + theme(legend.position=c(0.7,0.85)) +
scale_fill_gradient(name='Bin count',low='blue',high='yellow') +
labs(x='Mean difference (log2)',y='-log10(p-value)',subtitle='Gene-wise ttest: alive/dead') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2) +
theme(legend.direction='horizontal')
gg.volc1
ggplot(tt.vital %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=50) + theme(legend.position=c(0.7,0.85)) +
scale_fill_gradient(name='Bin count',low='blue',high='yellow') +
labs(x='Mean difference (log2)',y='-log10(p-value)',subtitle='Gene-wise ttest: alive/dead') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2) +
theme(legend.direction='horizontal',legend.position = 'bottom')
dev.off()
gg.volc1 <-
ggplot(tt.vital %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=50) + theme(legend.position=c(0.5,0.95)) +
scale_fill_gradient(name='Bin count',low='blue',high='yellow',breaks=c(0,200,400)) +
labs(x='Mean difference (log2)',y='-log10(p-value)',subtitle='Gene-wise ttest: alive/dead') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2) +
theme(legend.direction='horizontal',legend.position = 'bottom')
gg.volc1
tt.vital
tt.vital$p10>bonfer
sum(tt.vital$p10>bonfer)
sum(tt.vital$p10>bonfer,na.rm = T)
ggplot(tt.vital %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=50) + theme(legend.position=c(0.5,0.95)) +
scale_fill_gradient(name='Bin count',low='blue',high='yellow',breaks=c(0,200,400)) +
labs(x='Mean difference (log2)',y='-log10(p-value)',subtitle='Gene-wise ttest: alive/dead') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2) +
theme(legend.direction='horizontal',legend.position = 'bottom') +
geom_text(data=data.frame(x=-15,y=25,lab=paste('# sig:',sum(tt.vital$p10>bonfer,na.rm = T))),
inherit.aes=F,aes(x=x,y=y,label=lab))
ggplot(tt.vital %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=50) + theme(legend.position=c(0.5,0.95)) +
scale_fill_gradient(name='Bin count',low='blue',high='yellow',breaks=c(0,200,400)) +
labs(x='Mean difference (log2)',y='-log10(p-value)',subtitle='Gene-wise ttest: alive/dead') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2) +
theme(legend.direction='horizontal',legend.position = 'bottom') +
geom_text(data=data.frame(x=-18,y=40,lab=paste('# sig:',sum(tt.vital$p10>bonfer,na.rm = T))),
inherit.aes=F,aes(x=x,y=y,label=lab),color='red')
dev.off()
gg.volc1 <-
ggplot(tt.vital %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=50) + theme(legend.position=c(0.5,0.95)) +
scale_fill_gradient(name='Bin count',low='blue',high='yellow',breaks=c(0,200,400)) +
labs(x='Mean difference (log2)',y='-log10(p-value)',subtitle='Gene-wise ttest: alive/dead') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2) +
theme(legend.direction='horizontal',legend.position = 'bottom') +
geom_text(data=data.frame(x=-16,y=50,lab=paste('# sig:',sum(tt.vital$p10>bonfer,na.rm = T))),
inherit.aes=F,aes(x=x,y=y,label=lab),color='red')
gc()
tt.vital
tt.vital %>% filter(p10>bonfer)
filter(tt.status,p10>bonfer)
tt.vital %>% filter(p10>bonfer) %>%
left_join(filter(tt.status,p10>bonfer) %>% select(dm,entrez),by='entrez')
tt.join <-
tt.vital %>% filter(p10>bonfer) %>%
left_join(filter(tt.status,p10>bonfer) %>% select(dm,entrez),by='entrez')
na.omit(tt.join)
tt.join <- tt.vital %>% filter(p10>bonfer) %>%
left_join(filter(tt.status,p10>bonfer) %>% select(dm,entrez),by='entrez') %>% na.omit
ggplot(tt.join,aes(x=dm.x,y=dm.y)) + stat_bin2d(bins=50)
ggplot(tt.join,aes(x=dm.x,y=dm.y)) + stat_bin2d(bins=1-)
ggplot(tt.join,aes(x=dm.x,y=dm.y)) + stat_bin2d(bins=10)
ggplot(tt.join,aes(x=dm.x,y=dm.y)) + geom_point()
ggplot(tt.join %>% mutate_at(vars(dm.x,dm.y),funs(log2(abs(.))*ifelse(.<0,-1,1))),
aes(x=dm.x,y=dm.y)) + geom_point() + geom_smooth(method='lm',se=F)
ggplot(tt.join %>% mutate_at(vars(dm.x,dm.y),funs(log2(abs(.))*ifelse(.<0,-1,1))),
aes(x=dm.x,y=dm.y)) + stat_bin2d()
ggplot(tt.join %>% mutate_at(vars(dm.x,dm.y),funs(log2(abs(.))*ifelse(.<0,-1,1))),
aes(x=dm.x,y=dm.y)) + stat_bin2d(bins=50)
dev.off()
gc()
sub.df$disease_status %>% table
ggplot(tt.join %>% mutate_at(vars(dm.x,dm.y),funs(log2(abs(.))*ifelse(.<0,-1,1))),
aes(x=dm.x,y=dm.y)) + stat_bin2d(bins=50) +
labs(x='Alive vs. dead',y='Tumor free vs. with tumor',subtitle='Mean difference in t-tests')
gg.volc1
gg.cox
gg.cox <-
ggplot(cox.gather,aes(x=1-rank,y=abs(val),color=var)) +
geom_line() + geom_point() +
theme(legend.position='bottom') +
scale_color_discrete(name='Vital status',label=c('Alive','Dead')) +
labs(x='Cumulative share',y='Abs. corr. coefficient') +
scale_x_continuous(sec.axis = sec_axis(~.*nrow(tt.vital)/1000,name="'000s of genes"))
ggplot(tt.join %>% mutate_at(vars(dm.x,dm.y),funs(log2(abs(.))*ifelse(.<0,-1,1))),
aes(x=dm.x,y=dm.y)) + stat_bin2d(bins=50) +
labs(x='Alive vs. dead',y='Tumor free vs. with tumor',subtitle='Mean difference in t-tests (log2)') +
scale_fill_gradient(name='Bin count:') +
theme(legend.position = 'bottom')
gg.corr <-
ggplot(tt.join %>% mutate_at(vars(dm.x,dm.y),funs(log2(abs(.))*ifelse(.<0,-1,1))),
aes(x=dm.x,y=dm.y)) + stat_bin2d(bins=50) +
labs(x='Alive vs. dead',y='Tumor free vs. tumor',subtitle='Mean difference in t-tests (log2)') +
scale_fill_gradient(name='Bin count:') +
theme(legend.position = 'bottom')
rmd.list <- list(gg.cox=gg.cox,
gg.volc1=gg.volc1,
gg.corr=gg.corr)
save(rmd.list,file='rmd_data.RData')
dev.off()
gc()
gg.corr
gg.corr + geom_text(aes(x=-10,y=12,label=paste('N',nrow(tt.join),sep='=')))
gg.corr + geom_text(aes(x=-12,y=12,label=paste('N',nrow(tt.join),sep='=')))
gg.corr + geom_text(aes(x=-12,y=13,label=paste('N',nrow(tt.join),sep='=')),color='red')
gg.corr <-
ggplot(tt.join %>% mutate_at(vars(dm.x,dm.y),funs(log2(abs(.))*ifelse(.<0,-1,1))),
aes(x=dm.x,y=dm.y)) + stat_bin2d(bins=50) +
labs(x='Alive vs. dead',y='Tumor free vs. tumor',subtitle='Mean difference in t-tests (log2)') +
scale_fill_gradient(name='Bin count:') +
theme(legend.position = 'bottom') +
geom_text(aes(x=-12,y=13,label=paste('N',nrow(tt.join),sep='=')),color='red')
#############################################
###### ----- DATA SAVE TO RMD  ----- #######
#############################################
rmd.list <- list(gg.cox=gg.cox,
gg.volc1=gg.volc1,
gg.corr=gg.corr)
save(rmd.list,file='rmd_data.RData')
plot_grid(gg.cox,gg.corr,gg.volc1,ncol=3,labels=letters[1:3])
rmd.list <- list(gg.cox=gg.cox,
gg.volc1=gg.volc1,
gg.corr=gg.corr,
tt.vital=tt.vital,
tt.join=tt.join)
save(rmd.list,file='rmd_data.RData')
plot_grid(gg.cox,gg.corr,gg.volc1,ncol=3,labels=LETTERS[1:3],align = 'v')
gg.corr <-
ggplot(tt.join %>% mutate_at(vars(dm.x,dm.y),funs(log2(abs(.))*ifelse(.<0,-1,1))),
aes(x=dm.x,y=dm.y)) + stat_bin2d(bins=50) +
labs(x='Alive vs. dead',y='Tumor free vs. tumor',subtitle='Mean difference in t-tests (log2)') +
scale_fill_gradient(name='Bin count') +
theme(legend.position = 'bottom') +
geom_text(aes(x=-12,y=13,label=paste('N',nrow(tt.join),sep='=')),color='red')
# Combine our three plots...
#############################################
###### ----- DATA SAVE TO RMD  ----- #######
#############################################
rmd.list <- list(gg.cox=gg.cox,
gg.volc1=gg.volc1,
gg.corr=gg.corr,
tt.vital=tt.vital,
tt.join=tt.join)
save(rmd.list,file='rmd_data.RData')
plot_grid(gg.cox,gg.corr,gg.volc1,ncol=3,labels=LETTERS[1:3],align = 'v')
# Create the volcano plot
gg.volc1 <-
ggplot(tt.vital %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=50) + theme(legend.position=c(0.5,0.95)) +
scale_fill_gradient(name='Bin count',low='blue',high='yellow',breaks=c(0,200,400)) +
labs(x='Mean difference (log2)',y='-log10(p-value)',subtitle='Gene-wise ttest: alive/dead\n\n') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2) +
theme(legend.direction='horizontal',legend.position = 'bottom') +
geom_text(data=data.frame(x=-16,y=50,lab=paste('# sig:',sum(tt.vital$p10>bonfer,na.rm = T))),
inherit.aes=F,aes(x=x,y=y,label=lab),color='red')
# Create the correlation...
tt.join <- tt.vital %>% filter(p10>bonfer) %>%
left_join(filter(tt.status,p10>bonfer) %>% select(dm,entrez),by='entrez') %>% na.omit
gg.corr <-
ggplot(tt.join %>% mutate_at(vars(dm.x,dm.y),funs(log2(abs(.))*ifelse(.<0,-1,1))),
aes(x=dm.x,y=dm.y)) + stat_bin2d(bins=50) +
labs(x='Alive vs. dead',y='Tumor free vs. tumor',subtitle='Mean difference in t-tests (log2)\n\n') +
scale_fill_gradient(name='Bin count') +
theme(legend.position = 'bottom') +
geom_text(aes(x=-12,y=13,label=paste('N',nrow(tt.join),sep='=')),color='red')
# Combine our three plots...
#############################################
###### ----- DATA SAVE TO RMD  ----- #######
#############################################
rmd.list <- list(gg.cox=gg.cox,
gg.volc1=gg.volc1,
gg.corr=gg.corr,
tt.vital=tt.vital,
tt.join=tt.join)
save(rmd.list,file='rmd_data.RData')
dev.off()
gc()
# Create the volcano plot
gg.volc1 <-
ggplot(tt.vital %>% na.omit %>% mutate(adm=log2(abs(dm))*ifelse(dm<0,-1,1)),
aes(x=adm,y=p10)) +
stat_bin2d(bins=50) + theme(legend.position=c(0.5,0.95)) +
scale_fill_gradient(name='Bin count',low='blue',high='yellow',breaks=c(0,200,400)) +
labs(x='Mean difference (log2)',y='-log10(p-value)',subtitle='Gene-wise ttest: alive/dead\n\n') +
geom_hline(yintercept = bonfer,color='indianred',linetype=2) +
theme(legend.direction='horizontal',legend.position = 'bottom') +
geom_text(data=data.frame(x=-16,y=65,lab=paste('# sig:',sum(tt.vital$p10>bonfer,na.rm = T))),
inherit.aes=F,aes(x=x,y=y,label=lab),color='red')
rmd.list <- list(gg.cox=gg.cox,
gg.volc1=gg.volc1,
gg.corr=gg.corr,
tt.vital=tt.vital,
tt.join=tt.join)
save(rmd.list,file='rmd_data.RData')
plot_grid(draw_label('Figure: RNA-seq and clinical data'),plot_grid(gg.cox,gg.corr,gg.volc1,ncol=3,labels=LETTERS[1:3]),nrow=2,rel_heights = c(1,10))
plot_grid(ggplot() + draw_label('Figure: RNA-seq and clinical data'),
plot_grid(gg.cox,gg.corr,gg.volc1,ncol=3,labels=LETTERS[1:3]),nrow=2,rel_heights = c(1,10))
)
plot_grid(ggplot() + draw_label('Figure: RNA-seq and clinical data'),
plot_grid(gg.cox,gg.corr,gg.volc1,ncol=3,labels=LETTERS[1:3]),nrow=2,rel_heights = c(1,5))
dev.off()
gc()
5918/20000
tt.join
tt.join %>% filter(sign(dm.x))
tt.join %>% filter(sign(dm.x)!=sign(dm.u))
tt.join %>% filter(sign(dm.x)!=sign(dm.))
tt.join %>% filter(sign(dm.x)!=sign(dm.y))
gg.cox + geom_text(aes(x=0.5,y=0.5,label='Survival times/gene correlation'))
gg.cox + geom_text(aes(x=0.5,y=0.15,label='Survival times/gene correlation'))
gg.cox + geom_text(aes(x=0.5,y=0.15,label='Survival times/gene correlation'),inherit.aes=F)
gg.cox <-
ggplot(cox.gather,aes(x=1-rank,y=abs(val),color=var)) +
geom_line() + geom_point() +
theme(legend.position='bottom') +
scale_color_discrete(name='Vital status',label=c('Alive','Dead')) +
labs(x='Cumulative share',y='Abs. corr. coefficient') +
scale_x_continuous(sec.axis = sec_axis(~.*nrow(tt.vital)/1000,name="'000s of genes")) +
gg.cox + geom_text(aes(x=0.5,y=0.15,label='Survival times/gene correlation'),inherit.aes=F)
rmd.list <- list(gg.cox=gg.cox,
gg.volc1=gg.volc1,
gg.corr=gg.corr,
tt.vital=tt.vital,
tt.join=tt.join)
save(rmd.list,file='rmd_data.RData')
gg.cox <-
ggplot(cox.gather,aes(x=1-rank,y=abs(val),color=var)) +
geom_line() + geom_point() +
theme(legend.position='bottom') +
scale_color_discrete(name='Vital status',label=c('Alive','Dead')) +
labs(x='Cumulative share',y='Abs. corr. coefficient') +
scale_x_continuous(sec.axis = sec_axis(~.*nrow(tt.vital)/1000,name="'000s of genes")) +
geom_text(aes(x=0.5,y=0.15,label='Survival times/gene correlation'),inherit.aes=F)
rmd.list <- list(gg.cox=gg.cox,
gg.volc1=gg.volc1,
gg.corr=gg.corr,
tt.vital=tt.vital,
tt.join=tt.join)
save(rmd.list,file='rmd_data.RData')
dir.base
rmd2md <- function( path_site = getwd(),
dir_rmd = "_rmd",
dir_md = "_posts",
#dir_images = "figures",
url_images = "figures/",
out_ext='.md',
in_ext='.rmd',
recursive=FALSE) {
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
#andy change to avoid path problems when running without sh on windows
files <- list.files(path=file.path(path_site,dir_rmd), pattern=in_ext, ignore.case=TRUE, recursive=recursive)
for(f in files) {
message(paste("Processing ", f, sep=''),encoding = "UTF-8")
content <- readLines(file.path(path_site,dir_rmd,f))
# If any html calls, replace the src=figures/... with src=/figures/...
src.idx <- grep('src=',content,value=F)
if (length(src.idx)>0) {
content[src.idx] <- gsub('src=\"figures','src=\"/figures',content[src.idx])
} else {}
frontMatter <- which(substr(content, 1, 3) == '---')
if(length(frontMatter) >= 2 & 1 %in% frontMatter) {
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
if(statusLine > frontMatter[1] & statusLine < frontMatter[2]) {
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
if(tolower(status) == 'process') {
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
#andy change to path
outFile <- file.path(path_site, dir_md, paste0(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext))
#render_markdown(strict=TRUE)
#render_markdown(strict=FALSE) #code didn't render properly on blog
#andy change to render for jekyll
render_jekyll(highlight = "pygments")
#render_jekyll(highlight = "prettify") #for javascript
opts_knit$set(out.format='markdown')
# andy BEWARE don't set base.dir!! it caused me problems
# "base.dir is never used when composing the URL of the figures; it is
# only used to save the figures to a different directory.
# The URL of an image is always base.url + fig.path"
# https://groups.google.com/forum/#!topic/knitr/18aXpOmsumQ
# Get data directory
opts_knit$set(root.dir = dir_rmd)
opts_knit$set(base.url = "/")
# opts_knit$set(fig.width = 10)
opts_chunk$set(fig.path = url_images)
# opts_chunk$set(fig.width = 10)
#andy I could try to make figures bigger
#but that might make not work so well on mobile
opts_chunk$set(fig.width  = 8.5,
fig.height = 7.5,
dpi=300)
try(knit(text=content, output=outFile,encoding = "UTF-8"), silent=FALSE)
} else {
warning(paste("Not processing ", f, ", status is '", status,
"'. Set status to 'process' to convert.", sep=''))
}
} else {
warning("Status not found in front matter.")
}
} else {
warning("No front matter found. Will not process this file.")
}
}
invisible()
}
setwd("C:/Users/erikinwest/Documents/bioeconometrician/github/erikdrysdale.github.io/")
list.files()
rmd2md()
dev.off()
gg.temp <- plot_grid(ggplot() + draw_label('Figure: RNA-seq and clinical data'),
plot_grid(gg.cox,gg.volc1,gg.corr,ncol=3,labels=LETTERS[1:3]),nrow=2,rel_heights = c(1,6))
plot(gg.temp)
dev.off()
rm(list=ls())
rmd2md <- function( path_site = getwd(),
dir_rmd = "_rmd",
dir_md = "_posts",
#dir_images = "figures",
url_images = "figures/",
out_ext='.md',
in_ext='.rmd',
recursive=FALSE) {
require(knitr, quietly=TRUE, warn.conflicts=FALSE)
#andy change to avoid path problems when running without sh on windows
files <- list.files(path=file.path(path_site,dir_rmd), pattern=in_ext, ignore.case=TRUE, recursive=recursive)
for(f in files) {
message(paste("Processing ", f, sep=''),encoding = "UTF-8")
content <- readLines(file.path(path_site,dir_rmd,f))
# If any html calls, replace the src=figures/... with src=/figures/...
src.idx <- grep('src=',content,value=F)
if (length(src.idx)>0) {
content[src.idx] <- gsub('src=\"figures','src=\"/figures',content[src.idx])
} else {}
frontMatter <- which(substr(content, 1, 3) == '---')
if(length(frontMatter) >= 2 & 1 %in% frontMatter) {
statusLine <- which(substr(content, 1, 7) == 'status:')
publishedLine <- which(substr(content, 1, 10) == 'published:')
if(statusLine > frontMatter[1] & statusLine < frontMatter[2]) {
status <- unlist(strsplit(content[statusLine], ':'))[2]
status <- sub('[[:space:]]+$', '', status)
status <- sub('^[[:space:]]+', '', status)
if(tolower(status) == 'process') {
#This is a bit of a hack but if a line has zero length (i.e. a
#black line), it will be removed in the resulting markdown file.
#This will ensure that all line returns are retained.
content[nchar(content) == 0] <- ' '
message(paste('Processing ', f, sep=''))
content[statusLine] <- 'status: publish'
content[publishedLine] <- 'published: true'
#andy change to path
outFile <- file.path(path_site, dir_md, paste0(substr(f, 1, (nchar(f)-(nchar(in_ext)))), out_ext))
#render_markdown(strict=TRUE)
#render_markdown(strict=FALSE) #code didn't render properly on blog
#andy change to render for jekyll
render_jekyll(highlight = "pygments")
#render_jekyll(highlight = "prettify") #for javascript
opts_knit$set(out.format='markdown')
# andy BEWARE don't set base.dir!! it caused me problems
# "base.dir is never used when composing the URL of the figures; it is
# only used to save the figures to a different directory.
# The URL of an image is always base.url + fig.path"
# https://groups.google.com/forum/#!topic/knitr/18aXpOmsumQ
# Get data directory
opts_knit$set(root.dir = dir_rmd)
opts_knit$set(base.url = "/")
# opts_knit$set(fig.width = 10)
opts_chunk$set(fig.path = url_images)
# opts_chunk$set(fig.width = 10)
#andy I could try to make figures bigger
#but that might make not work so well on mobile
opts_chunk$set(fig.width  = 8.5,
fig.height = 7.5,
dpi=300)
try(knit(text=content, output=outFile,encoding = "UTF-8"), silent=FALSE)
} else {
warning(paste("Not processing ", f, ", status is '", status,
"'. Set status to 'process' to convert.", sep=''))
}
} else {
warning("Status not found in front matter.")
}
} else {
warning("No front matter found. Will not process this file.")
}
}
invisible()
}
setwd("C:/Users/erikinwest/Documents/bioeconometrician/github/erikdrysdale.github.io/")
rmd2md()
