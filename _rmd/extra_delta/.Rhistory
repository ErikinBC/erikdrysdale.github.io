rfun2 <- function(lam) { 19*(log(1-exp(-lam)) - log(1-exp(-2.55))) - 2*(lam - 2.55) }
dev.off()
plot(x,rfun(x),col='red')
lines(rfun2(x),col='blue')
dev.off()
plot(x,rfun(x),col='red',ylim = -5)
lines(rfun2(x),col='blue')
plot(x,rfun(x),col='red',ylim = -5)
?plot
plot(x,rfun(x),col='red',ylim = c(-5,0))
lines(rfun2(x),col='blue')
library(ggplot2)
data.frame(x=x)
x
ggplot(data=data.frame(x=x)) +
stat_function('rfun',color='red')
ggplot(data=data.frame(x=x)) +
stat_function(fun='rfun',color='red')
ggplot(data=data.frame(x=x)) +
stat_function(fun=rfun,color='red')
rfun
ggplot(data=data.frame,aes(x=x)) +
stat_function(fun=rfun,color='red')
ggplot(data=data.frame,aes(x=x)) +
stat_function(fun=rlam,size=1.5)
ggplot(data=data.frame,aes(x=x)) +
stat_function(fun=rfun,size=1.5)
x
rfun
library(ggplot2)
ggplot(data=data.frame,aes(x=x)) +
stat_function(fun=rfun,size=1.5)
x
ggplot(data=data.frame(x=x),aes(x=x)) +
stat_function(fun=rfun,size=1.5)
ggplot(data=data.frame(x=x),aes(x=x)) +
stat_function(fun=rfun,size=1.5,color='red') +
stat_function(fun=rfun2,size=1.5,color='blue') +
ggplot(data=data.frame(x=x),aes(x=x)) +
stat_function(fun=rfun,size=1.5,color='red') +
stat_function(fun=rfun2,size=1.5,color='blue') +
labs(x='x value',y=expression(r(lambda)))
ggplot(data=data.frame(x=x),aes(x=x)) +
stat_function(fun=rfun,size=1.5,color='red') +
stat_function(fun=rfun2,size=1.5,color='blue') +
labs(x='x value',y=expression(r(lambda)))
ggplot(data=data.frame(x=x),aes(x=x)) +
stat_function(fun=rfun,size=1.5,color='red') +
stat_function(fun=rfun2,size=1.5,color='blue') +
labs(x='x value',y=expression(r(lambda)),subtitle='Some plot title')
rm(list=ls())
# Define relative likelihood function
rfun <- function(lam) { 18*(log(1-exp(-lam)) - log(1-exp(-2.55))) - 2*(lam - 2.55) }
rfun2 <- function(lam) { 19*(log(1-exp(-lam)) - log(1-exp(-2.55))) - 2*(lam - 2.55) }
x <- seq(1,4,0.01)
# install.packages('ggplot2')
library(ggplot2)
ggplot(data=data.frame(x=x),aes(x=x)) +
stat_function(fun=rfun,size=1.5,color='red') +
stat_function(fun=rfun2,size=1.5,color='blue') +
labs(x='x value',y=expression(r(lambda)),subtitle='Some plot title')
dev.off()
# Define relative likelihood function
rfun <- function(lam) { 18*(log(1-exp(-lam)) - log(1-exp(-2.55))) - 2*(lam - 2.55) }
rfun2 <- function(lam) { 19*(log(1-exp(-lam)) - log(1-exp(-2.55))) - 2*(lam - 2.55) }
x <- seq(1,4,0.01)
# install.packages('ggplot2')
library(ggplot2)
ggplot(data=data.frame(x=x),aes(x=x)) +
stat_function(fun=rfun,size=1.5,color='red') +
stat_function(fun=rfun2,size=1.5,color='blue') +
labs(x='x value',y=expression(r(lambda)),subtitle='Some plot title')
dev.off()
ggplot(data=km_broom(broom::tidy(lc.surv1)),aes(x=time,y=estimate)) +
geom_step() + geom_point(aes(shape=n.censor)) +
labs(x='Time (days)',y='Surviving (non-censored) share')
# Options
options(max.print = 100)
# Load in CRAN packages
ll <- c('tidyverse','magrittr','forcats','stringr','cowplot','broom','scales','reshape2','ggrepel',
'survival','survminer')
sapply(ll,library,character.only=T)
# Clear up
rm(list=ls())
# Set up directory
dir.base <- 'C:/Users/erikinwest/Documents/bioeconometrician/github/erikdrysdale.github.io/_rmd/extra_delta/'
setwd(dir.base)
######################################
###### ----- QUESTION 1  ----- #######
######################################
# Load in the survival::cacner datasets
data(cancer)
lc <- tbl_df(cancer) %>% mutate(status2=ifelse(status==1,'Censored','Dead'),
sex2=ifelse(sex==1,'Male','Female'))
# Check missing observations by column
missing.col <- sapply(lc,function(cc) sum(is.na(cc))) %>% data.frame %>%
cbind(features=rownames(.),.) %>% tbl_df %>%
set_colnames(c('features','missing')) %>% arrange(desc(missing))
# Step 1: create a Surv object
lc.Surv <- Surv(time=lc$time,event=lc$status2=='Dead',type='right')
# Step 2: Fit different survfit object
lc.surv1 <- survfit(lc.Surv~1) # Base
lc.surv2 <- survfit(lc.Surv~sex2,data=lc)
lc.surv3 <- survfit(lc.Surv~age2,data=lc %>% mutate(age2=ifelse(age>median(age),'above','below')))
km_broom <- function(x) {
# Get a slice of the first row
x.slice <- x[1,]
# Check if there is a strata column
if (any(names(x.slice)=='strata')) {
# Get the number of unique strata
u.strata <- x$strata %>% unique
n.strata <- u.strata %>% length
# Split, apply, and merge
x2 <- do.call('rbind',lapply(split(x,x$strata),function(xx) {
rbind(xx[1,] %>% mutate(strata=xx[1,'strata'],time=0,estimate=1),xx)}))
} else { # No strata
# Fill it
x2 <- rbind(x[1,] %>% mutate(time=0,estimate=1),x)
}
# return
return(x2 %>% tbl_df)
}
# ggplot it
ggplot(data=km_broom(broom::tidy(lc.surv1)),aes(x=time,y=estimate)) +
geom_step() + geom_point(aes(shape=n.censor)) +
labs(x='Time (days)',y='Surviving (non-censored) share')
km_broom(broom::tidy(lc.surv1)
)
ggplot(data=km_broom(broom::tidy(lc.surv1)),aes(x=time,y=estimate)) +
geom_step() + geom_point(aes(shape=factor(n.censor))) +
labs(x='Time (days)',y='Surviving (non-censored) share')
km_broom <- function(x) {
# Get a slice of the first row
x.slice <- x[1,]
# Check if there is a strata column
if (any(names(x.slice)=='strata')) {
# Get the number of unique strata
u.strata <- x$strata %>% unique
n.strata <- u.strata %>% length
# Split, apply, and merge
x2 <- do.call('rbind',lapply(split(x,x$strata),function(xx) {
rbind(xx[1,] %>% mutate(strata=xx[1,'strata'],time=0,estimate=1),xx)}))
} else { # No strata
# Fill it
x2 <- rbind(x[1,] %>% mutate(time=0,estimate=1),x)
}
# Clean up x2
x2 <- x2 %>% tbl_df %>% mutate(is.censor=ifelse(n.censor==0,'no','yes'))
# return
return(x2)
}
# ggplot it
ggplot(data=km_broom(broom::tidy(lc.surv1)),aes(x=time,y=estimate)) +
geom_step() + geom_point(aes(shape=is.censor)) +
labs(x='Time (days)',y='Surviving (non-censored) share')
ggplot(data=km_broom(broom::tidy(lc.surv1)),aes(x=time,y=estimate)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving (non-censored) share') +
scale_shape_manual(values=c('','x'))
ggplot(data=km_broom(broom::tidy(lc.surv1)),aes(x=time,y=estimate*100)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)') +
scale_shape_manual(values=c('','x'))
ggplot(data=km_broom(broom::tidy(lc.surv1)),aes(x=time,y=estimate*100)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark censored points') +
scale_shape_manual(values=c('','x'))
dev.off()
# ggplot it
gg1 <- ggplot(data=km_broom(broom::tidy(lc.surv1)),aes(x=time,y=estimate*100)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark censored points') +
scale_shape_manual(values=c('','x'))
km_broom(broom::tidy(lc.surv2)
_
km_broom(broom::tidy(lc.surv2))
ggplot(data=km_broom(broom::tidy(lc.surv2)),aes(x=time,y=estimate*100)) +
geom_step(aes(color=strata)) + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark censored points') +
scale_shape_manual(values=c('','x'))
dev.off()
ggplot(data=km_broom(broom::tidy(lc.surv2)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark censored points') +
scale_shape_manual(values=c('','x'))
dev.off()
ggplot(data=km_broom(broom::tidy(lc.surv2)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark censored points') +
scale_shape_manual(values=c('','x')) +
scale_color_discrete(name='',labels=c('Female','Male'))
dev.off()
ggplot(data=km_broom(broom::tidy(lc.surv2)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark censored points') +
scale_shape_manual(values=c('','x')) +
scale_color_discrete(name='',labels=c('Female','Male')) +
theme(legend.position = c(3/4,1/2))
ggplot(data=km_broom(broom::tidy(lc.surv1)),aes(x=time,y=estimate*100)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='') +
scale_shape_manual(values=c('','x'))
# ggplot it
gg1 <- ggplot(data=km_broom(broom::tidy(lc.surv1)),aes(x=time,y=estimate*100)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='') +
scale_shape_manual(values=c('','x'))
dev.off()
ggplot(data=km_broom(broom::tidy(lc.surv3)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark are censored points') +
scale_shape_manual(values=c('','x')
theme(legend.position = c(3/4,3/4))
ggplot(data=km_broom(broom::tidy(lc.surv3)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark are censored points') +
scale_shape_manual(values=c('','x'))
source('~/R/funzies.R', echo=TRUE)
gg_color_hue(4)
gg_color_hue(4)[c(1,3)]
ggplot(data=km_broom(broom::tidy(lc.surv3)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark are censored points') +
scale_shape_manual(values=c('','x')) +
scale_color_manual(name='',labels=c('Female','Male'),gg_color_hue(4)[c(1,3)]) +
theme(legend.position = c(3/4,3/4))
ggplot(data=km_broom(broom::tidy(lc.surv3)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark are censored points') +
scale_shape_manual(values=c('','x')) +
scale_color_manual(name='',labels=c('Female','Male'),values=gg_color_hue(4)[c(1,3)]) +
theme(legend.position = c(3/4,3/4))
ggplot(data=km_broom(broom::tidy(lc.surv2)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark are censored points') +
scale_shape_manual(values=c('','x')) +
scale_color_manual(name='',labels=c('Female','Male'),values=gg_color_hue(4)[c(1,3)]) +
theme(legend.position = c(3/4,3/4))
dev.off()
ggplot(data=km_broom(broom::tidy(lc.surv3)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark are censored points') +
scale_shape_manual(values=c('','x')) +
theme(legend.position = c(3/4,3/4))
ggplot(data=km_broom(broom::tidy(lc.surv3)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark are censored points') +
scale_shape_manual(values=c('','x')) +
theme(legend.position = c(3/4,3/4)) +
scale_color_manual(name='',labels=c('> median age','< median age'),values=gg_color_hue(4)[c(2,4)]) +
gg_color_hue(4)
gg_color_hue
gg_color_hue(4)
dev.off()
ggplot(data=km_broom(broom::tidy(lc.surv3)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark are censored points') +
scale_shape_manual(values=c('','x')) +
theme(legend.position = c(3/4,3/4)) +
scale_color_manual(name='',labels=c('> median age','< median age'),values=c('red','blue'))
ggplot(data=km_broom(broom::tidy(lc.surv3)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark are censored points') +
scale_shape_manual(values=c('','x')) +
theme(legend.position = c(3/4,3/4)) +
scale_color_manual(name='',labels=c('> median age','< median age'),values=gg_color_hue(4)[c(2,4)])
ggplot(data=km_broom(broom::tidy(lc.surv3)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark are censored points') +
scale_shape_manual(values=c('','x')) +
theme(legend.position = c(3/4,3/4)) +
scale_color_manual(name='',labels=c('> median age','< median age'),values=gg_color_hue(4)[c(1,3)])
ggplot(data=km_broom(broom::tidy(lc.surv3)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark are censored points') +
scale_shape_manual(values=c('','x')) +
theme(legend.position = c(3/4,3/4)) +
scale_color_manual(name='',labels=c('> median age','< median age'),values=gg_color_hue(4)[c(2,4)])
gg.km2 <-
ggplot(data=km_broom(broom::tidy(lc.surv3)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark are censored points') +
scale_shape_manual(values=c('','x')) +
theme(legend.position = c(3/4,3/4)) +
scale_color_manual(name='',labels=c('> median age','< median age'),values=gg_color_hue(4)[c(2,4)])
getwd()
rmd.list <- list(gg.km1=gg.km1,gg.km2=gg.km2,gg.km3=gg.km3)
save(rmd.list,file='rmd_data.RData')
rmd.list <- list(gg.km1=gg.km1,gg.km2=gg.km2,gg.km3=gg.km3)
# Baseline KM
gg.km1 <- ggplot(data=km_broom(broom::tidy(lc.surv1)),aes(x=time,y=estimate*100)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='') +
scale_shape_manual(values=c('','x'))
# Gender KM
gg.km2 <- ggplot(data=km_broom(broom::tidy(lc.surv2)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark are censored points') +
scale_shape_manual(values=c('','x')) +
scale_color_manual(name='',labels=c('Female','Male'),values=gg_color_hue(4)[c(1,3)]) +
theme(legend.position = c(3/4,3/4))
# Age KM
gg.km3 <-
ggplot(data=km_broom(broom::tidy(lc.surv3)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark are censored points') +
scale_shape_manual(values=c('','x')) +
theme(legend.position = c(3/5,3/4)) +
scale_color_manual(name='',labels=c('Above median age','Below median age'),values=gg_color_hue(4)[c(2,4)])
tidy(survfit(Surv(time=c(1,5,10,15,20,25),event=c(1,1,0,1,1,0))~1))
##################################################
###### ----- SAVE CHATS FOR MARKDOWN ----- #######
##################################################
rmd.list <- list(gg.km1=gg.km1,gg.km2=gg.km2,gg.km3=gg.km3)
save(rmd.list,file='rmd_data.RData')
plot_grid(gg.km1,gg.km2,gg.km3,nrow=1,labels=LETTERS[1:3])
gg.km3 <-
ggplot(data=km_broom(broom::tidy(lc.surv3)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='') +
scale_shape_manual(values=c('','x')) +
theme(legend.position = c(3/5,3/4)) +
scale_color_manual(name='',labels=c('Above median age','Below median age'),values=gg_color_hue(4)[c(2,4)])
lc
lc$status2 %>% table
lc %>% tail
km_broom(lc.surv1)
lc.surv1
tidy(lc.surv1)
tidy(lc.surv1) %>% tail
# Call in the CRAN packages
ll <- c('tidyverse','magrittr','cowplot','scales','ggrepel','broom')
# 'survival','smcure','survminer')
sapply(ll,function(l) require(l,character.only = T))
# Load in the funzies
load('C:/Users/erikinwest/Documents/R/funzies.R')
load('C:/Users/erikinwest/Documents/R/funzies.R')
load('C:/Users/erikinwest/Documents/R/funzies.R')
source('C:/Users/erikinwest/Documents/bioeconometrician/github/erikdrysdale.github.io/_rmd/extra_delta/rmd_data.RData')
dev.off()
lc
lc %>% filter(status2=='Censored')
lc %>% filter(status2=='Censored') %>% mutate(ncensored=cumsum(1:length(inst)))
lc %>% filter(status2=='Censored') %>% mutate(ncensored=1:length(inst))
lc %>% filter(status2=='Censored') %>% mutate(ncensored=1:length(inst)) %>% use_series(time) %>% length
lc %>% filter(status2=='Censored') %>% mutate(ncensored=1:length(inst))
ggplot(lc %>% filter(status2=='Censored') %>% mutate(ncensored=1:length(inst)),
aes(x=time,y=ncensored)) + geom_step()
lc
ggplot(lc %>% filter(status2=='Censored') %>% arrange(time) %>% mutate(ncensored=1:length(inst)),
aes(x=time,y=ncensored)) + geom_step()
ggplot(lc %>% filter(status2=='Censored') %>% arrange(time) %>% mutate(ncensored=1:length(inst)),
aes(x=time,y=ncensored)) + geom_step() +
labs(x='Time (days)',y='Number censored',subtitle='')
ggplot(lc %>% filter(status2=='Censored') %>% arrange(time) %>% mutate(ncensored=1:length(inst)),
aes(x=time,y=ncensored)) + geom_step(color='lightblue') +
labs(x='Time (days)',y='Number censored',subtitle='')
nrow(lc)
gg.censored <- ggplot(lc %>% filter(status2=='Censored') %>% arrange(time) %>% mutate(ncensored=1:length(inst)),
aes(x=time,y=ncensored)) + geom_step() +
labs(x='Time (days)',y='Number censored',subtitle=paste('Out of 228 patients'))
# Create a plot of censored observations by time
gg.censored <- ggplot(lc %>% filter(status2=='Censored') %>% arrange(time) %>% mutate(ncensored=1:length(inst)),
aes(x=time,y=ncensored)) + geom_step() +
labs(x='Time (days)',y='Number censored',subtitle=paste('Out of 228 patients'))
# Baseline KM
gg.km1 <- ggplot(data=km_broom(broom::tidy(lc.surv1)),aes(x=time,y=estimate*100)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)',subtitle='Ticks mark are censored points') +
scale_shape_manual(values=c('','x'))
# Gender KM
gg.km2 <- ggplot(data=km_broom(broom::tidy(lc.surv2)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)') +
scale_shape_manual(values=c('','x')) +
scale_color_manual(name='',labels=c('Female','Male'),values=gg_color_hue(4)[c(1,3)]) +
theme(legend.position = c(3/4,3/4))
# Age KM
gg.km3 <-
ggplot(data=km_broom(broom::tidy(lc.surv3)),aes(x=time,y=estimate*100,color=strata)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
labs(x='Time (days)',y='Surviving share (%)') +
scale_shape_manual(values=c('','x')) +
theme(legend.position = c(3/5,3/4)) +
scale_color_manual(name='',labels=c('Above median age','Below median age'),values=gg_color_hue(4)[c(2,4)])
rmd.list <- list(gg.km1=gg.km1,gg.km2=gg.km2,gg.km3=gg.km3,gg.censored=gg.censored
)
save(rmd.list,file='rmd_data.RData')
dev.off
dev.off()
format(1/1234124,scientific = T)
?cancer
lc.surv3
lc.surv3 %>% summary
survdiff(formula = lc.Surv ~ age2, data = lc %>% mutate(age2 = ifelse(age >
median(age), "above", "below")))
# Calculate the MLE point estimate and se
mle <- sum(lc$censored)/sum(lc$time)
se <- sqrt(sum(lc$censored))/sum(lc$time)
data(cancer)
lc <- tbl_df(cancer) %>% mutate(status2=ifelse(status==1,'Censored','Dead'),
sex2=ifelse(sex==1,'Male','Female'),
censored=ifelse(status==1,1,0))
mle <- sum(lc$censored)/sum(lc$time)
se <- sqrt(sum(lc$censored))/sum(lc$time)
mle
?dexp
surv.exp <- function(x,lam) { 1-pexp(x,rate=lam) }
mle
ggplot(data=km_broom(broom::tidy(lc.surv1)),aes(x=time,y=estimate*100)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
stat_function(fun = surv.exp,color='red',args = list(lam=mle))
ggplot(data=km_broom(broom::tidy(lc.surv1)),aes(x=time,y=estimate)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F) +
stat_function(fun = surv.exp,color='red',args = list(lam=mle))
x=seq(0,200)
plot(x,1-pexp(x,0.003))
plot(x,1-pexp(x,0.0086))
sum(lc$censored)
sum(lc$time)
mle
plot(x,1-pexp(x,0.001))
x=seq(0,1000)
plot(x,1-pexp(x,0.001))
lc
lc %>% arrange(status)
lc %>% arrange(status) %>% use_series(censored)
lc %>% arrange(status) %>% mutate(share=censored*-1+0)
lc %>% arrange(status) %>% mutate(share=censored*-1+1)
lc %>% arrange(status) %>% mutate(share=cumsum(censored*-1+1))
lc %>% arrange(status) %>% mutate(share=cumsum(censored*-1+1)) %>% tail
lc %>% arrange(status) %>% mutate(share=nrow(lc)-cumsum(censored*-1+1))
lc %>% arrange(status) %>% mutate(share=1-cumsum(censored*-1+1)/nrow(lc))
test=lc %>% arrange(status) %>% mutate(share=1-cumsum(censored*-1+1)/nrow(lc))
ggplot(data=test,aes(x=time,y=share)) +
geom_step() + geom_point(aes(shape=is.censor),show.legend = F)
ggplot(data=test,aes(x=time,y=share)) +
geom_step()
test=lc %>% arrange(status) %>% mutate(share=1-cumsum(censored*-1+1)/nrow(lc)) %>% arrange(share)
ggplot(data=test,aes(x=time,y=share)) +
geom_step()
test
test$share
ts.plot(test$share)
with(plot(time,share))
with(test,plot(time,share))
test
dev.off()
lc
lc %>% arrange(time)
lc %>% arrange(time) %>% transmute(time=time,ccount=censored*-1+1)
lc %>% arrange(time) %>% transmute(time=time,ccount=censored*-1+1,csum=cumsum(ccount))
lc %>% arrange(time) %>% transmute(time=time,ccount=censored*-1+1,nalive=nrow(lc)-cumsum(ccount))
lc %>% arrange(time) %>% transmute(time=time,ccount=censored*-1+1,nalive=nrow(lc)-cumsum(ccount)) %>% tail
lc %>% arrange(time) %>% transmute(time=time,ccount=censored*-1+1,
nalive=nrow(lc)-cumsum(ccount),alive.share=nalive/nrow(lc))
test= lc %>% arrange(time) %>% transmute(time=time,ccount=censored*-1+1,
nalive=nrow(lc)-cumsum(ccount),alive.share=nalive/nrow(lc))
ggplot(data=test,aes(x=time,y=alive.share)) +
geom_step()
ggplot(data=test,aes(x=time,y=alive.share)) +
geom_step() +
scale_y_continuous(limits = c(0,1)) +
stat_function(fun = surv.exp,color='red',args = list(lam=mle))
plot(lc.surv1)
dev.off()
iud=read.table("http://www.uio.no/studier/emner/matnat/math/STK4080/h12/iud.txt",header=T)
head(iud)
sum(time)
sum(iud$time)
iud$status %>% table
iud$status==0
sum(iud$status==0)
sum(iud$status==0)/sum(iud$time)
read.table("http://www.uio.no/studier/emner/matnat/math/STK4080/h12/iud.txt",header=T) %>%
tbl_df %>% mutate(event=fct_recode(factor(status),'In Place'==0))
read.table("http://www.uio.no/studier/emner/matnat/math/STK4080/h12/iud.txt",header=T) %>%
tbl_df %>% mutate(event=factor(status))
iud <- read.table("http://www.uio.no/studier/emner/matnat/math/STK4080/h12/iud.txt",header=T) %>% tbl_df
iud$status %>% table
iud %>% mutate(event=factor(status)) %>% use_series(event) %>% table
iud %>% mutate(event=factor(status) %>% fct_recode('In Place'='1'))
iud %>% mutate(event=factor(status) %>% fct_recode('In Place'='0','Expelled'='1','Removed'='2'))
iud <- iud %>% mutate(event=factor(status) %>% fct_recode('In Place'='0','Expelled'='1','Removed'='2'))
Surv(iud$time,iud$event %in% c('Expelled','Removed'))
iud.Surv <- Surv(iud$time,iud$event %in% c('Expelled','Removed'))
plot(iud.Surv)
plot(survfit(iud.Surv~1))
tidy(survfit(iud.Surv~1))
tidy(survfit(iud.Surv~1))$estimate
dim(iud)
tidy(survfit(iud.Surv~1))$estimate %>% tail
tidy(survfit(iud.Surv~1)) %>% tail
ggplot(data=tidy(survfit(iud.Surv~1)),aes(x=time,y=estimate)) +
geom_step()
with(iud,sum(time))
tidy(survfit(iud.Surv~1))$n.censor
tidy(survfit(iud.Surv~1))$n.censor %>% sum
iud
with(iud,sum(status==0)/sum(time))
lam.hat <- with(iud,sum(status==0)/sum(time))
ggplot(data=tidy(survfit(iud.Surv~1)),aes(x=time,y=estimate)) +
geom_step() +
scale_y_continuous(limits = c(0,1)) +
stat_function(fun = surv.exp,color='red',args = list(lam=lam.hat))
lam.hat
dev.off()
x=seq(0,1000)
plot(x,1-pexp(x,lam.hat))
x=seq(0,200)
plot(x,1-pexp(x,lam.hat))
dev.off()
